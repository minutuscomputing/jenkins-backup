<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@4.10.3">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/arati-k/cicd-project.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="empty-list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
#-POSTBUILD (PROVISIONING DEPLOYMENT)
echo &quot;&quot;
echo &quot;..... Integration Phase Started :: Copying Artifacts :: ......&quot;
cd java_web_code/
/bin/cp target/wildfly-spring-boot-sample-1.0.0.war ../docker/
echo &quot;&quot;
echo &quot;..... Provisioning Phase Started :: Building Docker Container :: ......&quot;
cd ../docker/
sudo docker build -t devops_pipeline_demo .


CONTAINER=devops_pipeline_demo
 
RUNNING=$(sudo docker inspect --format=&quot;{{ .State.Running }}&quot; $CONTAINER 2&gt; /dev/null)

if [ $? -eq 1 ]; then
  echo &quot;&apos;$CONTAINER&apos; does not exist.&quot;
else
  sudo docker rm -f $CONTAINER
fi

    # run your container
    echo &quot;&quot;
	echo &quot;..... Deployment Phase Started :: Building Docker Container :: ......&quot;
	sudo docker run -d -p 8180:8080 --name devops_pipeline_demo devops_pipeline_demo


#-Completion
echo &quot;--------------------------------------------------------&quot;
echo &quot;View App deployed here: http://server-ip:8180/sample.txt&quot;
echo &quot;--------------------------------------------------------&quot;</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.BuildTrigger>
      <childProjects>try-maven-rt</childProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </hudson.tasks.BuildTrigger>
  </publishers>
  <buildWrappers/>
</project>